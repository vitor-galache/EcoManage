@inherits LayoutComponentBase
<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="Configuration.Theme"/>
<MudSnackbarProvider/>
<MudPopoverProvider/>
<MudDialogProvider  BackdropClick="false" FullWidth="false" MaxWidth="MaxWidth.Medium" Position="DialogPosition.Center" CloseOnEscapeKey="true"/>

<AuthorizeView>

    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton
                    Icon="@(_isDrawerOpen ? Icons.Material.TwoTone.MenuOpen : Icons.Material.TwoTone.Menu)"
                    OnClick="ToggleDrawer"
                    Color="Color.Inherit" Edge="Edge.Start"/>
                
                <MudText Color="Color.Primary" Typo="Typo.h5" Style="appearance: menulist-button;font-weight:bold" >Eco-Manage</MudText> <MudIcon Icon="@Icons.Material.TwoTone.Spa" Color="Color.Primary" Size="Size.Large" Class="pl-1 align-center"/>
                <MudSpacer/>
                
                
                <MudButton Color="Color.Inherit" Variant="Variant.Text" EndIcon="@Icons.Material.TwoTone.AccountCircle">@context.User.Identity?.Name</MudButton>
                
                <MudToggleIconButton
                    Color="Color.Inherit"
                    Class="ma-4"
                    @bind-Toggled="_isDarkMode"
                    Icon="@Icons.Material.TwoTone.DarkMode"
                    ToggledIcon="@Icons.Material.TwoTone.WbSunny"/>
            </MudAppBar>
            <MudDrawer @bind-Open="@_isDrawerOpen">
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>

    <NotAuthorized>
        <LoginRedirect/>
    </NotAuthorized>
</AuthorizeView>


@code
{
    private bool _isDarkMode = true;
    private bool _isDrawerOpen = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChange);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChange(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
    => _isDrawerOpen = !_isDrawerOpen;
    

}